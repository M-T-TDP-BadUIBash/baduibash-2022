@import 'var-radio';

.c-radio { 
  @include proto-radio();    
  
  &-group {    
    .c-radio__container {    
      @include proto-radio();
      border: $containerBorderSize $containerBorderStyle $containerBorderColor; 
      position: relative;
      margin-bottom: $radioGroupContainerMarginBottom;
      border-radius: $radioGroupContainerBorderRadius;

      &--none {
        @include proto-radio();        
        position: relative;
        margin-bottom: $radioGroupContainerNoneMarginBottom;
  
        input[type="radio"] {
          // Container Focus State
          &:focus ~ label {
            outline: -webkit-focus-ring-color auto 5px;
            z-index: 2000;
          }
        }
  
        label {
          @include proto-radio-label();          
  
          &::before {            
            top: $radioGroupContainerNoneLabelBeforeTop;
            left: $radioGroupContainerNoneLabelBeforeLeft;
          }
  
          &::after{            
            top: $radioGroupContainerNoneLabelAfterTop;
            left: $radioGroupContainerNoneLabelAfterLeft;
          }
        } 
      }

      input[type="radio"] {
        // Container Focus State
        &:focus ~ label {
         outline: -webkit-focus-ring-color auto 5px;
          z-index: 2000;
        }
      }

      label {
        @include proto-radio-label();
        display: flex;
        flex-wrap: wrap;

        &::before {
          top: $radioGroupContainerLabelBeforeTop;
          left: $radioGroupContainerLabelBeforeLeft;          
        }

        &::after{
          top: $radioGroupContainerLabelAfterTop;
          left: $radioGroupContainerLabelAfterLeft;
        }
      }
      
      &:first-child {
        border-radius: $radioGroupContainerFirstChildBorderRadius;
      }
      &:last-child {
        border-radius: $radioGroupContainerLastChildBorderRadius;
        margin-bottom: 0;
      } 
      &--text {
        font-weight: $radioGroupContainerTextFontWeight;
        margin-left: $radioGroupContainerTextMarginLeft;
      }
      &--input {        
        appearance: none;
        background-clip: padding-box;
        background-color: $radioGroupContainerTextInputBackgroundColor;
        border: $containerBorderSize $containerBorderStyle $containerBorderColor;
        border-radius: $radioGroupContainerTextInputBorderRadius;
        box-sizing: border-box;
        color: $radioGroupContainerTextInputColor;
        font-size: $radioGroupContainerTextInputFontSize;
        height: $radioGroupContainerTextInputHeight;      
        margin-left: $radioGroupContainerTextInputMarginLeft;     
        padding: $radioGroupContainerTextInputPadding;
        transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out; 

        // TO DO  
        &[disabled] {
          background: $radioGroupContainerTextInputDisabledColor;
        }
      }
    }

    input[type="radio"] {
      height: $radioDefaultInputHeight;
      position: absolute;
      opacity: $radioDefaultHeightOpacity;
      width: $radioDefaultInputWidth;  
     
      ~ label {
        position: relative;
        cursor: pointer;
        // Input Border
        &::before {
          @include proto-radio-input-border();
        }
        // Input Fill
        &::after {
          @include proto-radio-input-fill();
        }
        
        @if $isWTC == true {
          // Input Border
          &::before {
            @include proto-radio-input-border();
          }
          // Input Fill
          &::after {
            @include proto-radio-input-fill();
          }
        }    
      }
    
      &:hover ~ label:after {   
        background: $colorPrimaryBase;   
      }
      
      &:checked {
        ~ label::after {
          background: $radioCheckedBackground;
          @include animate(
              $radioButtonAnimationName,
              $radioButtonAnimationDuration,
              $radioButtonAnimationFillMode
            );
        }
      }  
     
      @if $isWTC == true {
        &:focus {
          + label::before {     
            box-shadow: $focusBoxShadow;
          }
        }
      }
    } 

    &--error {
      border: $textFieldErrorBorderSize $textFieldErrorBorderStyle $textFieldErrorBorderColor;
      color: $textFieldErrorInputColor;
    }
  }
}

@media only screen and (max-width: $breakpoint--xsmall) {
  .c-radio {
    &-group {
      .c-radio__container {       
        &--text {    
          margin: $radioGroupContainerTextMarginMobile;
        }

        &--input {
          margin-left: $radioGroupContainerTextInputMarginLeftLeftMobile;
        }
        input[type="text"] ~ label {
          height: $radioGroupContainerLabelHeightMobile;
        }
      }
    }
  } 
}